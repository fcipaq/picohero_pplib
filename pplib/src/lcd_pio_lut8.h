/*
 * pplib - a library for the PicoPal handheld
 *
 * Copyright (C) 2023 Daniel Kammer (daniel.kammer@web.de)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
 
// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ------------- //
// calc_lut_addr //
// ------------- //

#define calc_lut_addr_wrap_target 0
#define calc_lut_addr_wrap 4

#define calc_lut_addr_offset_calc_lut_entry 0u

static const uint16_t calc_lut_addr_program_instructions[] = {
            //     .wrap_target
    0x80a0, //  0: pull   block                      
    0xa0c1, //  1: mov    isr, x                     
    0x40e8, //  2: in     osr, 8                     
    0x4061, //  3: in     null, 1                    
    0x8020, //  4: push   block                      
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program calc_lut_addr_program = {
    .instructions = calc_lut_addr_program_instructions,
    .length = 5,
    .origin = -1,
};

static inline pio_sm_config calc_lut_addr_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + calc_lut_addr_wrap_target, offset + calc_lut_addr_wrap);
    return c;
}


#endif
